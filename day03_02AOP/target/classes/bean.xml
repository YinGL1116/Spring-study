<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="accountService" class="com.envision.spring.service.impl.AccountService"></bean>

    <!-- 通知类 Logger -->
    <bean id="logger" class="com.envision.spring.util.Logger"></bean>


    <!--配置AOP
        切点表达式写法：
        execution(访问修饰符 返回值 包名...类名.方法名(参数列表))
        可以使用通配符
        全通配形式 访问修饰符可以省略
        * *..*.*(..)
        一般只对业务层代码增加切面 所以通用切面表达式方法可以这么写
        * com.envision.spring.service.impl.*.*(..)
    -->
    <aop:config>
        <aop:aspect id="logAdvice" ref="logger">
            <!--
            <aop:before method="beforePrintLog" pointcut="execution(* com.envision.spring.service.impl.*.*(..))"></aop:before>
            <aop:after-returning method="afterReturningPrintLog" pointcut="execution(* com.envision.spring.service.impl.*.*(..))"></aop:after-returning>
            <aop:after-throwing method="afterThrowingPrintLog" pointcut="execution(* com.envision.spring.service.impl.*.*(..))"></aop:after-throwing>
            <aop:after method="afterPrintLog" pointcut="execution(* com.envision.spring.service.impl.*.*(..))"></aop:after>
            -->
            <!--
            <aop:around method="aroundAdvice" pointcut-ref="pc1"></aop:around>
            <aop:pointcut id="pc1" expression="execution(* com.envision.spring.service.impl.*.*(..))"/>
            -->
            <aop:before method="beforePrintLog" pointcut="execution(public void com.envision.spring.service.impl.AccountService.update(int))"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>